# Generated by Django 3.0.6 on 2020-05-20 14:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('identifier', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, null=True)),
                ('_picture', models.BinaryField(blank=True, db_column='picture')),
                ('_gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], db_column='gender', max_length=1, null=True)),
                ('language', models.CharField(choices=[('GB', 'English'), ('ES', 'Spanish')], max_length=2)),
                ('username', models.CharField(max_length=20, null=True)),
                ('_schedule', models.DateTimeField(db_column='schedule')),
                ('assigned_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='howru_models.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responses', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('text', models.CharField(max_length=100)),
                ('public', models.BooleanField()),
                ('language', models.CharField(choices=[('GB', 'English'), ('ES', 'Spanish')], max_length=2)),
                ('creator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='howru_models.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='PendingQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answering', models.BooleanField()),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='howru_models.Doctor')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='howru_models.Patient')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='howru_models.Question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='assigned_questions',
            field=models.ManyToManyField(blank=True, to='howru_models.Question'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AnsweredQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_date', models.DateTimeField()),
                ('response', models.CharField(max_length=100)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='howru_models.Doctor')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='howru_models.Patient')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='howru_models.Question')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
